<?php declare(strict_types=1);

namespace Huebert\SeoFaq;

use Huebert\SeoFaq\Core\Content\SeoFaqGroup\SeoFaqGroupEntity;
use Shopware\Core\Framework\DataAbstractionLayer\EntityRepository;
use Shopware\Core\Framework\DataAbstractionLayer\Search\Criteria;
use Shopware\Core\Framework\Plugin;
use Shopware\Core\Framework\Plugin\Context\ActivateContext;
use Shopware\Core\Framework\Plugin\Context\DeactivateContext;
use Shopware\Core\Framework\Plugin\Context\InstallContext;
use Shopware\Core\Framework\Plugin\Context\UninstallContext;
use Shopware\Core\Framework\Plugin\Context\UpdateContext;
use Doctrine\DBAL\Connection;

class HuebertSeoFaq extends Plugin
{
    public function install(InstallContext $installContext): void
    {
        parent::install($installContext); // TODO: Change the autogenerated stub
    }

    public function uninstall(UninstallContext $uninstallContext): void
    {
        if ($uninstallContext->keepUserData()) {
            parent::uninstall($uninstallContext);
            return;
        }
        /** @var Connection $connection */
        $connection = $this->container->get(Connection::class);

        $connection->executeUpdate('DROP TABLE IF EXISTS `hueb_seo_faq_questions_translation`');
        $connection->executeUpdate('DROP TABLE IF EXISTS `hueb_seo_faq_questions`');
        $connection->executeUpdate('DROP TABLE IF EXISTS `hueb_seo_faq_group_translation`');
        $connection->executeUpdate('DROP TABLE IF EXISTS `hueb_seo_faq_group`');

        parent::uninstall($uninstallContext);
    }

    public function activate(ActivateContext $activateContext): void
    {
        parent::activate($activateContext); // TODO: Change the autogenerated stub
    }

    public function deactivate(DeactivateContext $deactivateContext): void
    {
        parent::deactivate($deactivateContext); // TODO: Change the autogenerated stub
    }

    public function update(UpdateContext $updateContext): void
    {
        parent::update($updateContext); // TODO: Change the autogenerated stub
    }

    public function postUpdate(UpdateContext $updateContext): void
    {
        parent::postUpdate($updateContext); // TODO: Change the autogenerated stub

        if ($this->container->has('hueb_seo_faq_group.repository')) {
            /** @var EntityRepository $seoFaqGroupRepository */
            $seoFaqGroupRepository = $this->container->get('hueb_seo_faq_group.repository');

            $seoFaqGroups = $seoFaqGroupRepository->search(new Criteria(), $updateContext->getContext());

            /** @var SeoFaqGroupEntity $faqGroup */
            foreach ($seoFaqGroups->getElements() as $faqGroup) {
                $name = $faqGroup->getOldName();

                $seoFaqGroupRepository->update([
                    [
                        'id' => $faqGroup->getId(),
                        'name' => $name
                    ]
                ], $updateContext->getContext());
            }
        }
    }
}
