{% block ict_newsletter_with_promotion_newsletter_popup %}
    {% if page.extensions.newsletter_popup %}

        {% set popups = page.extensions.newsletter_popup.elements %}

        {% for popup in popups %}
            <div class="ict-newsletter-popup--bg-layer"></div>
            <div class="ict-newsletter-popup
                {{ popup.imagePosition == 'background' ? 'has-background-image' : '' }}
                {{ popup.imageMobileSettings == 'background' ? 'has-mobile-background-image' : '' }}"
                 data-newsletter-popup
                 data-popup-trigger="{{ popup.popupTrigger }}"
                 data-popup-time="{{ popup.popupTime }}"
                 data-popup-scroll="{{ popup.popupScroll }}"
                 data-dev-mode="{{ popup.devMode }}"
                 data-popup-id="{{ popup.id }}"
                 data-storage-type="{{ popup.storageType }}"
                 id="newsletter-popup"
            >
                <div class="ict-newsletter-popup--close-btn-wrapper">
                    <div class="ict-newsletter-popup--close-btn"></div>
                </div>

                {% if popup.imagePosition == 'left' or popup.imagePosition == 'right' %}
                    <div class="ict-newsletter-popup--column-image is-{{ popup.imagePosition }}">
                        {% if popup.mediaImage %}
                            <img
                                    src=" {{ popup.mediaImage|sw_encode_media_url }}"
                                    class="ict-newsletter-popup--image"
                                    alt="{{ popup.mediaImage.fileName }}"
                            >
                        {% endif %}
                    </div>
                {% endif %}
                <div class="ict-newsletter-popup--column-image-mobile is-{{ popup.imageMobileSettings }}">
                    {% if popup.mediaImage %}
                        <img
                                src=" {{ popup.mediaImage|sw_encode_media_url }}"
                                class="ict-newsletter-popup--image"
                                alt="{{ popup.mediaImage.fileName }}"
                        >
                    {% endif %}
                </div>

                <div class="ict-newsletter-popup--column-content image-is-{{ popup.imagePosition }} mobile-image-is-{{ popup.imageMobileSettings }}">
                    <div class="ict-newsletter-popup--content-inner" data-two-step-form>
                        <div class="ict-newsletter-popup--headline">{{ ((popup.headline|trans|raw) ?: '')|sw_sanitize }}</div>
                        <div class="ict-newsletter-popup--subline">{{ ((popup.subline|trans|raw) ?: '')|sw_sanitize }}</div>
                        <form action="{{ path('frontend.ict.form.newsletter.popup.register.handle') }}"
                              method="post"
                              data-newsletter-popup-form="true"
                              data-form-csrf-handler="true"
                              data-form-validation="true"
                              class="ict-newsletter-popup--form"
                        >
                            <div class="tab">
                                <input
                                        name="email"
                                        type="email"
                                        value="{{ data.get('email') }}"
                                        placeholder="{{ popup.mailFieldPlaceholder|trans }}"
                                        autocomplete="section-personal email"
                                        label="Email"
                                        required="required"
                                        class="ict-newsletter-popup--mail-input form-control{% if formViolations.getViolations('/email') is not empty %} is-invalid{% endif %}"
                                >
                                <span class="email-btn" type="button" id="nextBtn" onclick="nextPrev(1)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="8.159" height="12.157" viewBox="0 0 8.159 12.157">
                                        <g id="Gruppe_1351" data-name="Gruppe 1351" transform="translate(0.673 11.417) rotate(-90)">
                                            <path id="Pfad_4" data-name="Pfad 4" d="M-6.937-.115l-5.221,5.741-5.456-6" transform="translate(17.614 0.374)" fill="none" stroke="#C9AC77" stroke-width="2"></path>
                                        </g>
                                    </svg>
                                </span>
                            </div>
                            <div class="tab address-tab" id="tab2Content">
                                <div class="ict-newsletter-popup--form-row">
                                    <div class="newsletter">
                                        <input
                                                name="firstName"
                                                value="{{ data.get('firstName') }}"
                                                placeholder="{{ popup.firstNameFieldPlaceholder|trans }}"
                                                class="ict-newsletter-popup--first-name-input
                                                {% if popup.showLastName %} has-margin{% endif %}
                                                form-control{% if formViolations.getViolations( '/' ~ fieldName ) %} is-invalid{% endif %}"
                                        />

                                        <input
                                                name="lastName"
                                                value="{{ data.get('lastName') }}"
                                                placeholder="{{ popup.lastNameFieldPlaceholder|trans }}"
                                                class="ict-newsletter-popup--last-name-input
                                                {% if popup.showFirstName %} has-margin{% endif %}
                                                form-control{% if formViolations.getViolations( '/' ~ fieldName ) %} is-invalid{% endif %}"
                                        />

                                        <div class="gaisbock-inputs-box d-flex">
                                            <div class="input-zipcode">
                                                <input
                                                        name="zipCode"
                                                        value="{{ data.get('zipCode') }}"
                                                        placeholder="{{ 'popup.zipCodeFieldPlaceholder'|trans }}"
                                                        class="ict-newsletter-popup--zip-code-input form-control"
                                                />
                                            </div>
                                            <div class="input-street">
                                                <input
                                                        name="street"
                                                        value="{{ data.get('street') }}"
                                                        placeholder="{{ 'popup.streetFieldPlaceholder'|trans }}"
                                                        class="ict-newsletter-popup--zip-code-input form-control"
                                                />
                                            </div>
                                            <div class="input-city">
                                                <input
                                                        name="city"
                                                        value="{{ data.get('city') }}"
                                                        placeholder="{{ 'popup.cityFieldPlaceholder'|trans }}"
                                                        class="ict-newsletter-popup--zip-code-input form-control"
                                                />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <input type="hidden" name="option"
                                       value="{{ constant('Shopware\\Storefront\\Controller\\FormController::SUBSCRIBE') }}"/>

                                <button type="submit" class="ict-newsletter-popup--submit-btn btn">
                                    {{ popup.textSubscribeButton|trans }}
                                </button>

                                <div class="form-hidden-fields">
                                    <input type="submit" class="submit--hidden d-none"/>
                                    <input type="hidden" name="popupId" value="{{ popup.id }}"/>
                                </div>
                                <div class="ict-newsletter-popup--privacy">
                                    {% sw_include '@Storefront/storefront/element/cms-element-form/form-components/cms-element-form-privacy.html.twig' %}
                                </div>
                            </div>

                            {% if popup.promotionActive and popup.promotionShowValidUntil %}
                                <div class="ict-newsletter-popup--promotion-until">
                                    <p>
                                        {% if popup.promotionTextValidUntil %}
                                            {{ popup.promotionTextValidUntil|trans }}
                                        {% endif %}
                                        {% if popup.promotion.validUntil %}
                                            <span>{{ popup.promotion.validUntil|format_date('short', locale=app.request.locale) }}</span>
                                        {% endif %}
                                    </p>
                                </div>
                            {% endif %}

                            <div class="ict-newsletter-popup--captcha-container">
                                {% sw_include '@Storefront/storefront/component/captcha/base.html.twig' with { 'captchas': shopware.config.core.basicInformation.activeCaptchas } %}
                            </div>
                            <div class="ict-newsletter-popup--captcha-error-container"></div>


                            {% if popup.textNonSubscribe %}
                                <button class="ict-newsletter-popup--non-subscribe-btn">
                                    {{ popup.textNonSubscribe|trans }}
                                </button>
                            {% endif %}
                            <div style="text-align:center;">
                                <span class="step"></span>
                                <span class="step"></span>
                            </div>

                        </form>
                        <div class="ict-newsletter-popup--error-container"></div>
                    </div>
                    <div class="ict-newsletter-popup--response-wrapper">
                        <div class="ict-newsletter-popup--response-icon">
                            {% sw_icon 'checkmark-circle' %}
                        </div>
                        <p class="ict-newsletter-popup--response-text"></p>
                    </div>
                </div>
            </div>
            <style>
                /* Hide all steps by default: */
                .tab {
                    display: none;
                }

                input.invalid {
                    background-color: #ffdddd;
                }

                .ict-newsletter-popup {
                {% if popup.backgroundColor %} background-color: {{ popup.backgroundColor }};
                {% endif %} border-radius: {{ popup.popupBorderRadius }}px;
                }

                @media all and (max-width: 480px) {

                    .ict-newsletter-popup {
                    {% if popup.heightMobile %} min-height: {{ popup.heightMobile }}px;
                    {% endif %}
                    }

                    .ict-newsletter-popup.has-mobile-background-image {
                        background-image: url("{{ popup.mediaImage|sw_encode_media_url }}");
                        background-repeat: no-repeat;
                        background-size: {{ popup.imageFit }};
                        background-position: {{ popup.imageAlignment }};
                    }
                }

                @media all and (min-width: 481px) {

                    .ict-newsletter-popup {
                    {% if popup.heightDesktop %} min-height: {{ popup.heightDesktop }}px;
                    {% endif %}
                    }

                    .ict-newsletter-popup.has-background-image {
                        background-image: url("{{ popup.mediaImage|sw_encode_media_url }}");
                        background-repeat: no-repeat;
                        background-size: {{ popup.imageFit }};
                        background-position: {{ popup.imageAlignment }};
                    }
                }

                .ict-newsletter-popup--close-btn:before,
                .ict-newsletter-popup--close-btn:after {
                {% if popup.closeButtonColor %} background-color: {{ popup.closeButtonColor }};
                {% endif %}
                }

                .ict-newsletter-popup--close-btn:hover:before,
                .ict-newsletter-popup--close-btn:hover:after {
                {% if popup.closeButtonHoverColor %} background-color: {{ popup.closeButtonHoverColor }};
                {% endif %}
                }

                .ict-newsletter-popup--column-content {
                {% if popup.contentAlignment %} justify-content: {{ popup.contentAlignment }};
                {% endif %}
                }

                .ict-newsletter-popup--column-image {
                {% if popup.mediaBackgroundColor %} background-color: {{ popup.mediaBackgroundColor }};
                {% endif %}{% if popup.imageFit %} object-fit: {{ popup.imageFit }};
                {% endif %}
                }

                .ict-newsletter-popup--image {
                {% if popup.imageFit %} object-fit: {{ popup.imageFit }};
                    object-position: {{ popup.imageAlignment }};
                {% endif %}
                }

                .ict-newsletter-popup--first-name-input {
                    border-radius: {{ popup.firstNameFieldBorderRadius }}px;
                    border-color: {{ popup.firstNameFieldBorderColor }};
                }

                .ict-newsletter-popup--last-name-input {
                    border-radius: {{ popup.lastNameFieldBorderRadius }}px;
                    border-color: {{ popup.lastNameFieldBorderColor }};
                }

                .ict-newsletter-popup--mail-input {
                    border-radius: {{ popup.mailFieldBorderRadius }}px;
                    border-color: {{ popup.mailFieldBorderColor }};
                }

                .ict-newsletter-popup--submit-btn {
                {% if popup.subscribeButtonBackgroundColor %} background-color: {{ popup.subscribeButtonBackgroundColor }};
                {% endif %}{% if popup.subscribeButtonTextColor is not empty %} color: {{ popup.subscribeButtonTextColor }};
                {% endif %} border-radius: {{ popup.subscribeButtonBorderRadius }}px;
                }

                .ict-newsletter-popup--submit-btn:hover {
                {% if popup.subscribeButtonBackgroundHoverColor %} background-color: {{ popup.subscribeButtonBackgroundHoverColor }};
                {% endif %}{% if popup.subscribeButtonTextHoverColor %} color: {{ popup.subscribeButtonTextHoverColor }};
                {% endif %}
                }

                .ict-newsletter-popup--non-subscribe-btn {
                {% if popup.nonSubscribeTextColor %} color: {{ popup.nonSubscribeTextColor }};
                {% endif %}
                }

                .ict-newsletter-popup--non-subscribe-btn:hover {
                {% if popup.nonSubscribeTextHoverColor %} color: {{ popup.nonSubscribeTextHoverColor }};
                {% endif %}
                }

                .ict-newsletter-popup--headline {
                    font-size: {{ popup.headlineFontSizeMobile }}px;
                    font-family: {{ popup.headlineFontFamily }};
                    line-height: {{ popup.headlineLineHeightMobile }}px;
                }

                .ict-newsletter-popup--subline {
                    font-size: {{ popup.sublineFontSizeMobile }}px;
                    font-family: {{ popup.sublineFontFamily }};
                    line-height: {{ popup.sublineLineHeightMobile }}px;
                }

                .ict-newsletter-popup--promotion-until {
                    font-size: {{ popup.promotionFontSizeMobile }}px;
                    font-family: {{ popup.promotionFontFamily }};
                    line-height: {{ popup.promotionLineHeightMobile }}px;
                    color: {{ popup.promotionColor }};
                }

                /* Tablet */
                @media all and (min-width: 481px) {
                    .ict-newsletter-popup--headline {
                        font-size: {{ popup.headlineFontSizeTablet }}px;
                        line-height: {{ popup.headlineLineHeightTablet }}px;
                    }

                    .ict-newsletter-popup--subline {
                        font-size: {{ popup.sublineFontSizeTablet }}px;
                        line-height: {{ popup.sublineLineHeightTablet }}px;
                    }

                    .ict-newsletter-popup--promotion-until {
                        font-size: {{ popup.promotionFontSizeTablet }}px;
                        line-height: {{ popup.promotionLineHeightTablet }}px;
                    }
                }

                /* Desktop */
                @media all and (min-width: 1280px) {
                    .ict-newsletter-popup--headline {
                        font-size: {{ popup.headlineFontSizeDesktop}}px;
                        line-height: {{ popup.headlineLineHeightDesktop }}px;
                    }

                    .ict-newsletter-popup--subline {
                        font-size: {{ popup.sublineFontSizeDesktop }}px;
                        line-height: {{ popup.sublineLineHeightDesktop }}px;
                    }

                    .ict-newsletter-popup--promotion-until {
                        font-size: {{ popup.promotionFontSizeDesktop }}px;
                        line-height: {{ popup.promotionLineHeightDesktop }}px;
                    }
                }
            </style>
        {% endfor %}
    {% endif %}

    <script>
        var currentTab = 0;
        showTab(currentTab);

        function showTab(n) {

            var x = document.getElementsByClassName("tab");
            if(x.length !== 0) {
                x[n].style.display = "block";


                if (n == (x.length - 1)) {
                    document.getElementById("nextBtn").innerHTML = "Submit";
                } else {
                    document.getElementById("nextBtn").innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="8.159" height="12.157" viewBox="0 0 8.159 12.157"> <g id="Gruppe_1351" data-name="Gruppe 1351" transform="translate(0.673 11.417) rotate(-90)"> <path id="Pfad_4" data-name="Pfad 4" d="M-6.937-.115l-5.221,5.741-5.456-6" transform="translate(17.614 0.374)" fill="none" stroke="#C9AC77" stroke-width="2"></path></g></svg>'
                }
                fixStepIndicator(n)
            }
        }

        function nextPrev(n) {
            var x = document.getElementsByClassName("tab");
            if (n == 1 && !validateForm()) return false;
            x[currentTab].style.display = "none";
            currentTab = currentTab + n;

            if (currentTab === 1) {
                document.querySelector('.ict-newsletter-popup').classList.add("address-field");
            }

            if (currentTab >= x.length) {
                document.getElementById("regForm").submit();
                return false;
            }
            showTab(currentTab);
        }

        function validateForm() {
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");

            for (i = 0; i < y.length; i++) {
                if (y[i].value == "") {
                    y[i].className += " invalid";
                    valid = false;
                }
            }

            if (valid) {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid;
        }

        function fixStepIndicator(n) {
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            x[n].className += " active";
        }
    </script>
{% endblock %}
